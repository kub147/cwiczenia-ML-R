---
title: "Zadanie 1" 
author: Jakub Wilk
date: 2024-10-7
format:   
  html:    
    toc: true    
    toc-depth: 3    
    toc-location: right    
    toc-title: Spis Treści    
    number-sections: true    
    number-depth: 3    
    html-math-method: katex    
    code-tools: true    
    code-block-bg: true    
    code-fold: show    
    code-summary: "Show and hide code"    
    link-external-icon: true    
    link-external-newwindow: true    
    smooth-scroll: true    
    self-contained: true    
    theme:         
      dark: solar        
      light: flatly    
    fontsize: 1.0em    
    linestretch: 1.3    
    fig-align: center
execute:   
  echo: true  
  error: false  
  warning: false  
  output: true
editor_options: 
  chunk_output_type: console
---

# Wprowadzenie

W tym zadaniu analizujemy dane dotyczące jakości powietrza, aby przewidzieć poziom ozonu na podstawie innych zmiennych. Użyjemy regresji liniowej, aby dopasować model oraz stworzymy wykres porównujący rzeczywiste i prognozowane wartości ozonu.

# Biblioteki

Najpierw załadujemy niezbędne biblioteki do analizy danych i wizualizacji.

```{r message=FALSE, warning=FALSE}
library(parsnip)
library(tidymodels)
library(tidyverse)
library(readr)
library(broom.mixed)
library(dotwhisker)
```


# Przygotowanie danych
Konwersję nazw kolumn na małe litery.
Usunięcie brakujących danych.
Usunięcie kolumny day, która nie jest potrzebna.
Konwersję zmiennej month na typ factor, aby traktować ją jako zmienną kategoryczną.


```{r}
colnames(airquality) <- tolower(colnames(airquality))

air <- 
  airquality |>
  as_tibble() |>
  na.omit() |> 
  select(-day) |> 
  mutate(month = factor(month))

# Podgląd przetworzonych danych
glimpse(air)
```


# Tworzenie modelu regresji liniowej
Tworzymy model regresji liniowej, w którym zmienną zależną jest poziom ozonu (ozone), a zmiennymi niezależnymi są promieniowanie słoneczne (solar.r), prędkość wiatru (wind), temperatura (temp) oraz miesiąc (month).

Czy to jest najlepszy możliwy model ?

```{r}
lm_mod <- linear_reg() |> 
  set_engine("lm")

lm_fit <- 
  lm_mod |> 
  fit(ozone ~ solar.r + wind * temp, data = air)

# Wyświetlenie wyników dopasowanego modelu

lm_fit$fit |> 
  tidy() |> 
  mutate(pstar = ggstats::signif_stars(p.value))
```


# Predykcje
Na podstawie dopasowanego modelu obliczamy prognozy poziomu ozonu dla naszych danych. Zapisujemy prognozy w nowej kolumnie.

```{r}
air$predict_ozone <- predict(lm_fit, air)

# Podgląd danych z prognozami
head(air)

```


# Wykres porównania wartości rzeczywistych i prognozowanych

Wykres, który porównuje rzeczywiste wartości stężenia ozonu z prognozowanymi. Zamiast punktów i linii, używamy kwadratów do oznaczenia danych rzeczywistych oraz dodajemy gradientową linię regresji. Zmieniamy również styl etykiet oraz układ wykresu, aby nadać mu bardziej nowoczesny wygląd.

```{r}
ggplot(air, aes(x = ozone, y = predict_ozone$.pred)) +
  geom_point(shape = 15, color = "darkgreen", size = 3) +  
  geom_smooth(method = "lm", se = TRUE, color = "orange", linetype = "dashed", fill = "lightblue") +
  labs(
    title = "Porównanie: Rzeczywiste a Prognozowane Stężenie Ozonu",
    subtitle = "Model regresji liniowej wielorakiej",
    x = "Rzeczywiste stężenia ozonu [ug/m3]",
    y = "Prognozowane stężenia ozonu [ug/m3]"
  )
```

A jak model sprawdza się w podziale na miesiące ? Proszę 

```{r}
library(GGally)
library(ggpubr)

ggplot(air, aes(x = ozone, y = predict_ozone$.pred)) +
  geom_point(shape = 15, color = "darkgreen", size = 3) +  
  geom_smooth(method = "lm", se = TRUE, color = "orange", linetype = "dashed", fill = "lightblue") +
  facet_wrap(~month, scales = "free") +
  stat_cor(label.y.npc = 0.85) +
  stat_regline_equation(
    aes(label =  paste(..adj.rr.label..)), 
    label.y.npc = 1
    ) +
  labs(
    title = "Porównanie: Rzeczywiste a Prognozowane Stężenie Ozonu",
    subtitle = "Model regresji liniowej wielorakiej",
    x = "Rzeczywiste stężenia ozonu [ug/m3]",
    y = "Prognozowane stężenia ozonu [ug/m3]"
  )

```

```{r}
test <- augment(lm_fit, new_data = air) 

# Prosty przykład 
test |> 
  group_by(month) |> 
  yardstick::rmse(ozone, .pred)

# wybór wiely metryk
# patrz: https://yardstick.tidymodels.org/articles/metric-types.html

multi <- metric_set(mae, rmse, rsq, rsq_trad)

# Zobacz jakie to proste 
test |> 
  group_by(month) |> 
  multi(ozone, .pred) |> 
  pivot_wider(names_from = .metric, values_from = .estimate) |> 
  gt::gt() |> 
  gt::fmt_number(n_sigfig = 3)
```

